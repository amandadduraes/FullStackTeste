{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leo\\\\Desktop\\\\Sistema de Gerenciamento de Clientes\\\\reactjs\\\\src\\\\components\\\\CadastroClientes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CadastroClientes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CadastroClientes = ({\n  onCadastrarCliente\n}) => {\n  _s();\n  const [nome, setNome] = useState('');\n  const [email, setEmail] = useState('');\n  const [telefone, setTelefone] = useState('');\n  const [coordenadaX, setCoordenadaX] = useState(0);\n  const [coordenadaY, setCoordenadaY] = useState(0);\n  const handleCadastrarCliente = async () => {\n    // Verificando o formato do email\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      console.error('Formato de e-mail inválido');\n      return;\n    }\n\n    // Formatando o telefone\n    const telefoneFormatado = formatarTelefone(telefone);\n    const cliente = {\n      nome: nome,\n      email: email,\n      telefone: telefoneFormatado,\n      coordenadaX: coordenadaX,\n      coordenadaY: coordenadaY\n    };\n    try {\n      await onCadastrarCliente(cliente);\n      setNome('');\n      setEmail('');\n      setTelefone('');\n      setCoordenadaX(0);\n      setCoordenadaY(0);\n    } catch (error) {\n      console.error('Erro ao cadastrar cliente:', error);\n    }\n  };\n\n  // Função para formatar o telefone\n  const formatarTelefone = numero => {\n    // Remover caracteres não numéricos\n    const numeros = numero.replace(/\\D/g, '');\n\n    // Adicionar parênteses para o DDD e inserir 0 após o quinto dígito\n    let telefoneFormatado = '';\n    if (numeros.length >= 2) {\n      telefoneFormatado += `(${numeros.substring(0, 2)})`;\n    }\n    if (numeros.length > 2) {\n      telefoneFormatado += `${numeros.substring(2, 6)}`;\n    }\n    if (numeros.length >= 6) {\n      telefoneFormatado += `-${numeros.substring(6)}`;\n    }\n    return telefoneFormatado;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cadastro-clientes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cadastro de Clientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nome,\n        onChange: e => setNome(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Telefone:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: telefone,\n        onChange: e => setTelefone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Coordenada X:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: coordenadaX,\n        onChange: e => setCoordenadaX(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Coordenada Y:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: coordenadaY,\n        onChange: e => setCoordenadaY(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCadastrarCliente,\n      children: \"Cadastrar Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(CadastroClientes, \"vYaY10kefwWtjK5shNLskB5X8iM=\");\n_c = CadastroClientes;\nexport default CadastroClientes;\nvar _c;\n$RefreshReg$(_c, \"CadastroClientes\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CadastroClientes","onCadastrarCliente","_s","nome","setNome","email","setEmail","telefone","setTelefone","coordenadaX","setCoordenadaX","coordenadaY","setCoordenadaY","handleCadastrarCliente","emailRegex","test","console","error","telefoneFormatado","formatarTelefone","cliente","numero","numeros","replace","length","substring","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/leo/Desktop/Sistema de Gerenciamento de Clientes/reactjs/src/components/CadastroClientes.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './CadastroClientes.css';\r\n\r\nconst CadastroClientes = ({ onCadastrarCliente }) => {\r\n  const [nome, setNome] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [telefone, setTelefone] = useState('');\r\n  const [coordenadaX, setCoordenadaX] = useState(0);\r\n  const [coordenadaY, setCoordenadaY] = useState(0);\r\n\r\n  const handleCadastrarCliente = async () => {\r\n    // Verificando o formato do email\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      console.error('Formato de e-mail inválido');\r\n      return;\r\n    }\r\n\r\n    // Formatando o telefone\r\n    const telefoneFormatado = formatarTelefone(telefone);\r\n\r\n    const cliente = {\r\n      nome: nome,\r\n      email: email,\r\n      telefone: telefoneFormatado,\r\n      coordenadaX: coordenadaX,\r\n      coordenadaY: coordenadaY,\r\n    };\r\n\r\n    try {\r\n      await onCadastrarCliente(cliente);\r\n      setNome('');\r\n      setEmail('');\r\n      setTelefone('');\r\n      setCoordenadaX(0);\r\n      setCoordenadaY(0);\r\n    } catch (error) {\r\n      console.error('Erro ao cadastrar cliente:', error);\r\n    }\r\n  };\r\n\r\n  // Função para formatar o telefone\r\n  const formatarTelefone = (numero) => {\r\n    // Remover caracteres não numéricos\r\n    const numeros = numero.replace(/\\D/g, '');\r\n\r\n    // Adicionar parênteses para o DDD e inserir 0 após o quinto dígito\r\n    let telefoneFormatado = '';\r\n    if (numeros.length >= 2) {\r\n      telefoneFormatado += `(${numeros.substring(0, 2)})`;\r\n    }\r\n    if (numeros.length > 2) {\r\n      telefoneFormatado += `${numeros.substring(2, 6)}`;\r\n    }\r\n    if (numeros.length >= 6) {\r\n      telefoneFormatado += `-${numeros.substring(6)}`;\r\n    }\r\n\r\n    return telefoneFormatado;\r\n  };\r\n\r\n  return (\r\n    <div className=\"cadastro-clientes-container\">\r\n      <h2>Cadastro de Clientes</h2>\r\n      <label>\r\n        Nome:\r\n        <input type=\"text\" value={nome} onChange={(e) => setNome(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        Email:\r\n        <input type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        Telefone:\r\n        <input type=\"text\" value={telefone} onChange={(e) => setTelefone(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        Coordenada X:\r\n        <input type=\"number\" value={coordenadaX} onChange={(e) => setCoordenadaX(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        Coordenada Y:\r\n        <input type=\"number\" value={coordenadaY} onChange={(e) => setCoordenadaY(e.target.value)} />\r\n      </label>\r\n      <button onClick={handleCadastrarCliente}>Cadastrar Cliente</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CadastroClientes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}