{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leo\\\\Desktop\\\\Sistema de Gerenciamento de Clientes\\\\reactjs\\\\src\\\\components\\\\CadastroClientes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CadastroClientes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CadastroClientes = ({\n  onCadastrarCliente\n}) => {\n  _s();\n  const [nome, setNome] = useState('');\n  const [email, setEmail] = useState('');\n  const [telefone, setTelefone] = useState('');\n  const [coordenadaX, setCoordenadaX] = useState(0);\n  const [coordenadaY, setCoordenadaY] = useState(0);\n  const [aviso, setAviso] = useState('');\n  const handleCadastrarCliente = async () => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setAviso('Formato de e-mail inválido');\n      return;\n    }\n    const telefoneValido = /^[0-9]+$/.test(telefone);\n    if (!telefoneValido) {\n      setAviso('O telefone deve conter apenas números');\n      return;\n    }\n    const telefoneFormatado = formatarTelefone(telefone);\n    const cliente = {\n      nome: nome,\n      email: email,\n      telefone: telefoneFormatado,\n      coordenadaX: coordenadaX,\n      coordenadaY: coordenadaY\n    };\n    try {\n      await onCadastrarCliente(cliente);\n      setNome('');\n      setEmail('');\n      setTelefone('');\n      setCoordenadaX(0);\n      setCoordenadaY(0);\n      setAviso('');\n    } catch (error) {\n      console.error('Erro ao cadastrar cliente:', error);\n    }\n  };\n  const formatarTelefone = numero => {\n    const numeros = numero.replace(/\\D/g, '');\n    let telefoneFormatado = '';\n    if (numeros.length >= 2) {\n      telefoneFormatado += `(${numeros.substring(0, 2)})`;\n    }\n    if (numeros.length > 2) {\n      telefoneFormatado += `${numeros.substring(2, 6)}`;\n    }\n    if (numeros.length >= 6) {\n      telefoneFormatado += `-${numeros.substring(6)}`;\n    }\n    return telefoneFormatado;\n  };\n\n  // Função para lidar com a mudança no campo de telefone\n  const handleChangeTelefone = e => {\n    // Verificar se o valor contém apenas números\n    const numeros = e.target.value.replace(/\\D/g, '');\n    setTelefone(numeros);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cadastro-clientes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cadastro de Clientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), aviso && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aviso\",\n      children: aviso\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nome,\n        onChange: e => setNome(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        pattern: \"[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Telefone:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        value: telefone,\n        onChange: handleChangeTelefone,\n        pattern: \"[0-9]*\",\n        inputMode: \"numeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Coordenada X:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: coordenadaX,\n        onChange: e => setCoordenadaX(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Coordenada Y:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: coordenadaY,\n        onChange: e => setCoordenadaY(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCadastrarCliente,\n      children: \"Cadastrar Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(CadastroClientes, \"sZvvINxVFYjopm5L2PZZO/AMmRQ=\");\n_c = CadastroClientes;\nexport default CadastroClientes;\nvar _c;\n$RefreshReg$(_c, \"CadastroClientes\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CadastroClientes","onCadastrarCliente","_s","nome","setNome","email","setEmail","telefone","setTelefone","coordenadaX","setCoordenadaX","coordenadaY","setCoordenadaY","aviso","setAviso","handleCadastrarCliente","emailRegex","test","telefoneValido","telefoneFormatado","formatarTelefone","cliente","error","console","numero","numeros","replace","length","substring","handleChangeTelefone","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","pattern","inputMode","onClick","_c","$RefreshReg$"],"sources":["C:/Users/leo/Desktop/Sistema de Gerenciamento de Clientes/reactjs/src/components/CadastroClientes.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './CadastroClientes.css';\r\n\r\nconst CadastroClientes = ({ onCadastrarCliente }) => {\r\n  const [nome, setNome] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [telefone, setTelefone] = useState('');\r\n  const [coordenadaX, setCoordenadaX] = useState(0);\r\n  const [coordenadaY, setCoordenadaY] = useState(0);\r\n  const [aviso, setAviso] = useState('');\r\n\r\n  const handleCadastrarCliente = async () => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      setAviso('Formato de e-mail inválido');\r\n      return;\r\n    }\r\n\r\n    const telefoneValido = /^[0-9]+$/.test(telefone);\r\n    if (!telefoneValido) {\r\n      setAviso('O telefone deve conter apenas números');\r\n      return;\r\n    }\r\n\r\n    const telefoneFormatado = formatarTelefone(telefone);\r\n\r\n    const cliente = {\r\n      nome: nome,\r\n      email: email,\r\n      telefone: telefoneFormatado,\r\n      coordenadaX: coordenadaX,\r\n      coordenadaY: coordenadaY,\r\n    };\r\n\r\n    try {\r\n      await onCadastrarCliente(cliente);\r\n      setNome('');\r\n      setEmail('');\r\n      setTelefone('');\r\n      setCoordenadaX(0);\r\n      setCoordenadaY(0);\r\n      setAviso(''); \r\n    } catch (error) {\r\n      console.error('Erro ao cadastrar cliente:', error);\r\n    }\r\n  };\r\n\r\n  const formatarTelefone = (numero) => {\r\n    const numeros = numero.replace(/\\D/g, '');\r\n\r\n    let telefoneFormatado = '';\r\n    if (numeros.length >= 2) {\r\n      telefoneFormatado += `(${numeros.substring(0, 2)})`;\r\n    }\r\n    if (numeros.length > 2) {\r\n      telefoneFormatado += `${numeros.substring(2, 6)}`;\r\n    }\r\n    if (numeros.length >= 6) {\r\n      telefoneFormatado += `-${numeros.substring(6)}`;\r\n    }\r\n\r\n    return telefoneFormatado;\r\n  };\r\n\r\n  // Função para lidar com a mudança no campo de telefone\r\n  const handleChangeTelefone = (e) => {\r\n    // Verificar se o valor contém apenas números\r\n    const numeros = e.target.value.replace(/\\D/g, '');\r\n    setTelefone(numeros);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cadastro-clientes-container\">\r\n      <h2>Cadastro de Clientes</h2>\r\n      {aviso && <div className=\"aviso\">{aviso}</div>}\r\n      <label>\r\n        Nome:\r\n        <input type=\"text\" value={nome} onChange={(e) => setNome(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        Email:\r\n        <input\r\n          type=\"text\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          pattern=\"[^\\s@]+@[^\\s@]+\\.[^\\s@]+\"\r\n        />\r\n      </label>\r\n      <label>\r\n        Telefone:\r\n        <input\r\n          type=\"tel\"\r\n          value={telefone}\r\n          onChange={handleChangeTelefone}\r\n          pattern=\"[0-9]*\"\r\n          inputMode=\"numeric\"\r\n        />\r\n      </label>\r\n      <label>\r\n        Coordenada X:\r\n        <input type=\"number\" value={coordenadaX} onChange={(e) => setCoordenadaX(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        Coordenada Y:\r\n        <input type=\"number\" value={coordenadaY} onChange={(e) => setCoordenadaY(e.target.value)} />\r\n      </label>\r\n      <button onClick={handleCadastrarCliente}>Cadastrar Cliente</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CadastroClientes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMkB,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,MAAMC,UAAU,GAAG,4BAA4B;IAC/C,IAAI,CAACA,UAAU,CAACC,IAAI,CAACZ,KAAK,CAAC,EAAE;MAC3BS,QAAQ,CAAC,4BAA4B,CAAC;MACtC;IACF;IAEA,MAAMI,cAAc,GAAG,UAAU,CAACD,IAAI,CAACV,QAAQ,CAAC;IAChD,IAAI,CAACW,cAAc,EAAE;MACnBJ,QAAQ,CAAC,uCAAuC,CAAC;MACjD;IACF;IAEA,MAAMK,iBAAiB,GAAGC,gBAAgB,CAACb,QAAQ,CAAC;IAEpD,MAAMc,OAAO,GAAG;MACdlB,IAAI,EAAEA,IAAI;MACVE,KAAK,EAAEA,KAAK;MACZE,QAAQ,EAAEY,iBAAiB;MAC3BV,WAAW,EAAEA,WAAW;MACxBE,WAAW,EAAEA;IACf,CAAC;IAED,IAAI;MACF,MAAMV,kBAAkB,CAACoB,OAAO,CAAC;MACjCjB,OAAO,CAAC,EAAE,CAAC;MACXE,QAAQ,CAAC,EAAE,CAAC;MACZE,WAAW,CAAC,EAAE,CAAC;MACfE,cAAc,CAAC,CAAC,CAAC;MACjBE,cAAc,CAAC,CAAC,CAAC;MACjBE,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAMF,gBAAgB,GAAII,MAAM,IAAK;IACnC,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAEzC,IAAIP,iBAAiB,GAAG,EAAE;IAC1B,IAAIM,OAAO,CAACE,MAAM,IAAI,CAAC,EAAE;MACvBR,iBAAiB,IAAK,IAAGM,OAAO,CAACG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAE,GAAE;IACrD;IACA,IAAIH,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;MACtBR,iBAAiB,IAAK,GAAEM,OAAO,CAACG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAE,EAAC;IACnD;IACA,IAAIH,OAAO,CAACE,MAAM,IAAI,CAAC,EAAE;MACvBR,iBAAiB,IAAK,IAAGM,OAAO,CAACG,SAAS,CAAC,CAAC,CAAE,EAAC;IACjD;IAEA,OAAOT,iBAAiB;EAC1B,CAAC;;EAED;EACA,MAAMU,oBAAoB,GAAIC,CAAC,IAAK;IAClC;IACA,MAAML,OAAO,GAAGK,CAAC,CAACC,MAAM,CAACC,KAAK,CAACN,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IACjDlB,WAAW,CAACiB,OAAO,CAAC;EACtB,CAAC;EAED,oBACE1B,OAAA;IAAKkC,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1CnC,OAAA;MAAAmC,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5BzB,KAAK,iBAAId,OAAA;MAAKkC,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAErB;IAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9CvC,OAAA;MAAAmC,QAAA,GAAO,OAEL,eAAAnC,OAAA;QAAOwC,IAAI,EAAC,MAAM;QAACP,KAAK,EAAE7B,IAAK;QAACqC,QAAQ,EAAGV,CAAC,IAAK1B,OAAO,CAAC0B,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACRvC,OAAA;MAAAmC,QAAA,GAAO,QAEL,eAAAnC,OAAA;QACEwC,IAAI,EAAC,MAAM;QACXP,KAAK,EAAE3B,KAAM;QACbmC,QAAQ,EAAGV,CAAC,IAAKxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAC1CS,OAAO,EAAC;MAA0B;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRvC,OAAA;MAAAmC,QAAA,GAAO,WAEL,eAAAnC,OAAA;QACEwC,IAAI,EAAC,KAAK;QACVP,KAAK,EAAEzB,QAAS;QAChBiC,QAAQ,EAAEX,oBAAqB;QAC/BY,OAAO,EAAC,QAAQ;QAChBC,SAAS,EAAC;MAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRvC,OAAA;MAAAmC,QAAA,GAAO,eAEL,eAAAnC,OAAA;QAAOwC,IAAI,EAAC,QAAQ;QAACP,KAAK,EAAEvB,WAAY;QAAC+B,QAAQ,EAAGV,CAAC,IAAKpB,cAAc,CAACoB,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF,CAAC,eACRvC,OAAA;MAAAmC,QAAA,GAAO,eAEL,eAAAnC,OAAA;QAAOwC,IAAI,EAAC,QAAQ;QAACP,KAAK,EAAErB,WAAY;QAAC6B,QAAQ,EAAGV,CAAC,IAAKlB,cAAc,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF,CAAC,eACRvC,OAAA;MAAQ4C,OAAO,EAAE5B,sBAAuB;MAAAmB,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEV,CAAC;AAACpC,EAAA,CA1GIF,gBAAgB;AAAA4C,EAAA,GAAhB5C,gBAAgB;AA4GtB,eAAeA,gBAAgB;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}